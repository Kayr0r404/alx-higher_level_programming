 """
    Multiplies two matrices.

    Args:
        m_a (list): First matrix.
        m_b (list): Second matrix.

    Returns:
        list: Result of matrix multiplication.

    Raises:
        TypeError: If input matrices are not valid.
        ValueError: If matrices can't be multiplied.

    Doctests:
    >>> matrix_mul = __import__("101-lazy_matrix_mul").lazy_matrix_mul
    >>> matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]])
    array([[19, 22],
           [43, 50]])

    >>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[7], [8], [9]])
    array([[ 50],
           [122]])

    >>> matrix_mul([[1, 2], [3, 4]], [[5, 6, 7], [8, 9, 10]])
    array([[21, 24, 27],
           [47, 54, 61]])

    >>> matrix_mul([[1, 2], [3, 4.5]], [[5, 6], [7, '8']])
    Traceback (most recent call last):
        ...
    numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('float64'), dtype('<U21')) -> None

    >>> matrix_mul([[]], [[]])
    Traceback (most recent call last):
        ...
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 0)

    >>> matrix_mul([1, 2], [])
    Traceback (most recent call last):
    ...
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 0 is different from 2)
    
    >>> matrix_mul([[1, 2], [3, 4]], [[5], [6]])
    array([[17],
           [39]])

    >>> matrix_mul([1, 2], [3, 4])
    11
    
    >>> matrix_mul([[1, 2]], [3, 4])
    array([11])

    >>> matrix_mul([[1, 2]], 3)
    Traceback (most recent call last):
        ...
    ValueError: matmul: Input operand 1 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)
    
    >>> matrix_mul("Karabo", [[3, 4]])
    Traceback (most recent call last):
        ...
    numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('<U6'), dtype('int64')) -> None
    
    >>> matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8, 9]])
    Traceback (most recent call last):
        ...
    ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

    """